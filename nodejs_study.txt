https://www.koreahtml5.kr/
  -> 프레임워크 - JavaScript - Node(Express)


# node.js
  Google Chrome 브라우저의 JavaScript 엔진 V8 기반 Framework
  node 환경을 구축하면 JavaScript 언어를 쓸 수 있다.
  -> 이제 Frontend 만 아니라 Backend 와 일반 App 개발에도 사용 가능!


# API Server 구축 방법
  Web Framework 를 쓰는게 좋다. ex) Express, Koa, Hapi

  1. node.js 기본 방법

    $ mkdir myapp
    $ cd myapp
    $ npm init
      . app.js 또는 index.js 파일명 입력
    $ npm install express --save

    파일 생성 (앞에서 선택한 파일명)
    === app.js 또는 index.js (취향) ===
      const express = require('express')
      const app = express()
      const port = 3000

      app.get('/', (req, res) => {
        res.send('Hello World!')
      })

      app.listen(port, () => {
        console.log(`Example app listening on port ${port}!`)
      })

    웹서버 실행!
    $ node app.js 또는 npm start
      . package.json 의 'scripts' 항목을 수정하면 npm start 명령으로 가능!
        === package.json ===
        {
          "scripts": {
            "start": "node app.js"
          }
        }

  2. express-generator 이용

    설치...
    $ npm install -g express-generator

    $ express myapp

    $ cd myapp
    $ npm install
    $ DEBUG=myapp:* npm start


# Basic routing (기본 라우팅 방법)

  app.METHOD(PATH, HANDLER)

  --- example
  app.get('/', function (req, res) {
    res.send('Hello World!')
  })

  app.post('/', function (req, res) {
    res.send('Got a POST request')
  })

  app.put('/user', function (req, res) {
    res.send('Got a PUT request at /user')
  })

  app.delete('/user', function (req, res) {
    res.send('Got a DELETE request at /user')
  })

  * 이제 DB(MySQL, PostgreSQL, ...)만 연동하면


# Express 기본 구성 요소
  - Application
    const express = require('express');
    const app = express();

    app.use(express.static('public'));
    app.listen(3000, () => {
      console.log('Example app listening on port 3000!');
    });
    app.get('/', (req, res) => {
      res.send('Hello World!\n');
    });

  - Request
    req.params: url 파라매터 정보를 조회
    req.query: 쿼리 문자열을 조회
    req.body: 요청 바디를 조회

  - Response
    res.send()
    res.json()
    res.status()

  - Router
    Router 클래스


# DB 연동

  - DB 환경 세팅
    . MySQL 설치 & 실행
      brew install mysql
      mysql.server start

    . root 암호 설정
      mysqladmin -u root -p password 1234

    . mysql 실행
      mysql -h localhost -u root -p

    . 권한 이슈 해결
      use mysql;
      ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '1234'

    . Database, Table 생성
      > create database myapp_db;
      > use myapp_db;
      > CREATE TABLE users (
          id int(11) unsigned NOT NULL AUTO_INCREMENT,
          name varchar(255) NOT NULL,
          PRIMARY KEY (id)
        );

    . 테스트용 데이터 입력
      > insert into users (name) values ('apple');
      > insert into users (name) values ('google');
      > insert into users (name) values ('starbucks');

  - express 프로젝트 업데이트
  mpn install mysql --save


* 관련 예제 -> 이 코드 안에 사용법이 다 있으니 꼭 참고할 것!
  myapp : https://github.com/lsw828/nodejs_study/tree/master/myapp

